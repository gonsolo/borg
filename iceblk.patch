From 2c7c500344e6933838ec9cc82b8b2e5b8833451a Mon Sep 17 00:00:00 2001
From: Gon Solo <gonsolo@gmail.com>
Date: Mon, 14 Oct 2024 15:20:03 +0200
Subject: [PATCH] Fix iceblk for Linux 6.11.3.

---
 Makefile |  4 +++-
 iceblk.c | 21 ++++++++++++---------
 2 files changed, 15 insertions(+), 10 deletions(-)

diff --git a/Makefile b/Makefile
index 340c359..2f08cf4 100644
--- a/Makefile
+++ b/Makefile
@@ -5,7 +5,9 @@ obj-m += iceblk.o
 else
 
 # The default assumes you cloned this as part of firesim-software (FireMarshal)
-LINUXSRC=../../../../riscv-linux
+# LINUXSRC=../../../../riscv-linux
+# Borg uses this:
+LINUXSRC=../../../default/linux
 
 KMAKE=make -C $(LINUXSRC) ARCH=riscv CROSS_COMPILE=riscv64-unknown-linux-gnu- M=$(PWD)
 
diff --git a/iceblk.c b/iceblk.c
index dcea96f..b6eb586 100644
--- a/iceblk.c
+++ b/iceblk.c
@@ -22,6 +22,8 @@
 #include <linux/of_platform.h>
 #include <linux/of_irq.h>
 
+#include <linux/platform_device.h>
+
 #include <asm/io.h>
 #include <asm/page.h>
 
@@ -244,17 +246,19 @@ static int iceblk_setup(struct iceblk_port *port)
 		goto exit_queue;
 	}
 
-	port->gd = blk_mq_alloc_disk(&port->tag_set, NULL);
+        struct queue_limits lim = {
+               .max_hw_sectors         = max_req_len,
+               .max_segments           = 1,
+               .logical_block_size = ICEBLK_SECTOR_SIZE,
+        };
+
+	port->gd = blk_mq_alloc_disk(&port->tag_set, &lim, NULL);
 	if(IS_ERR(port->gd)) {
 		dev_err(dev, "Could not allocate disk\n");
 		goto exit_gendisk;
 	}
 	port->queue = port->gd->queue;
 
-	blk_queue_logical_block_size(port->queue, ICEBLK_SECTOR_SIZE);
-	blk_queue_max_segments(port->queue, 1);
-	blk_queue_max_hw_sectors(port->queue, max_req_len);
-
 	port->gd->major = port->major;
 	port->gd->first_minor = 0;
 	port->gd->fops = &iceblk_fops;
@@ -305,19 +309,18 @@ static int iceblk_probe(struct platform_device *pdev)
 	return 0;
 }
 
-static int iceblk_teardown(struct iceblk_port *port)
+static void iceblk_teardown(struct iceblk_port *port)
 {
 	del_gendisk(port->gd);
 	put_disk(port->gd);
 	unregister_blkdev(port->major, ICEBLK_NAME);
-	return 0;
 }
 
-static int iceblk_remove(struct platform_device *pdev)
+static void iceblk_remove(struct platform_device *pdev)
 {
 	struct device *dev = &pdev->dev;
 	struct iceblk_port *port = dev_get_drvdata(dev);
-	return iceblk_teardown(port);
+	iceblk_teardown(port);
 }
 
 static struct of_device_id iceblk_of_match[] = {
-- 
2.47.0

